{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useSelector } from 'react-redux';\nimport { LOAD_NEWS, WORD_SEARCH, ID_ENGLISH } from \"../Store/Type\";\nvar initState = {\n  cards: [],\n  word: '',\n  lang: ''\n};\nexport var SearchReducer = function SearchReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_NEWS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: [].concat(_toConsumableArray(state.cards), [_objectSpread({}, action.data)])\n      });\n\n    case WORD_SEARCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        word: action.word\n      });\n\n    case ID_ENGLISH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lang: action.id\n      });\n\n    default:\n      return state;\n  }\n};\nexport var ws = function ws(word) {\n  return {\n    type: WORD_SEARCH,\n    word: word\n  };\n};\nexport var loadnews = function loadnews(data) {\n  return {\n    type: LOAD_NEWS,\n    data: data\n  };\n};\nexport var changeLang = function changeLang(id) {};","map":{"version":3,"sources":["E:/Works/NewsApp/newApp/src/Reducer/SearchReducer.jsx"],"names":["useSelector","LOAD_NEWS","WORD_SEARCH","ID_ENGLISH","initState","cards","word","lang","SearchReducer","state","action","type","data","id","ws","loadnews","changeLang"],"mappings":";;;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,UAAhC;AACA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAC,EAFY;AAGjBC,EAAAA,IAAI,EAAC;AAHY,CAAlB;AAMA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA8B;AAAA,MAA7BC,KAA6B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,SAAL;AAAgB,6CAAWQ,KAAX;AAAkBJ,QAAAA,KAAK,+BAAMI,KAAK,CAACJ,KAAZ,sBAAuBK,MAAM,CAACE,IAA9B;AAAvB;;AAChB,SAAKV,WAAL;AAAkB,6CAAWO,KAAX;AAAkBH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAA/B;;AAClB,SAAKH,UAAL;AAAiB,6CAAWM,KAAX;AAAkBF,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAA/B;;AACjB;AAAS,aAAOJ,KAAP;AAJb;AAOH,CARM;AASP,OAAO,IAAMK,EAAE,GAAG,SAALA,EAAK,CAACR,IAAD,EAAU;AACxB,SAAO;AAACK,IAAAA,IAAI,EAAET,WAAP;AAAoBI,IAAAA,IAAI,EAAJA;AAApB,GAAP;AAEH,CAHM;AAIP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACH,IAAD,EAAU;AAC9B,SAAO;AAACD,IAAAA,IAAI,EAACV,SAAN;AAAiBW,IAAAA,IAAI,EAAJA;AAAjB,GAAP;AACH,CAFM;AAGP,OAAO,IAAMI,UAAU,GAAE,SAAZA,UAAY,CAACH,EAAD,EAAQ,CAEhC,CAFM","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport {LOAD_NEWS, WORD_SEARCH, ID_ENGLISH} from '../Store/Type'\r\nconst initState = {\r\n cards:[],\r\n word:'',\r\n lang:''\r\n}\r\n\r\nexport const SearchReducer = (state =initState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_NEWS: return {...state, cards: [...state.cards, {...action.data}]}\r\n        case WORD_SEARCH: return {...state, word: action.word}\r\n        case ID_ENGLISH: return {...state, lang: action.id}\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport const ws = (word) => {\r\n    return {type: WORD_SEARCH, word}\r\n    \r\n} \r\nexport const loadnews = (data) => {\r\n    return {type:LOAD_NEWS, data}\r\n}\r\nexport const changeLang =(id) => {\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}