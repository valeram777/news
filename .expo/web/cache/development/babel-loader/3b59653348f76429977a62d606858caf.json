{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Works\\\\NewsApp\\\\newApp\\\\src\\\\something\\\\cards.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { loadnews } from \"../Reducer/SearchReducer\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport uuid from 'react-uuid';\nexport var Cards = function Cards() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  var wordSe = useSelector(function (state) {\n    return state.search.word;\n  });\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://newsapi.org/v2/everything?q=\" + wordSe + \"&apiKey=482d083900f44dbc992e9d0195a02dca\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.articles);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n  var rr = data.map(function (item) {\n    var img = {\n      uri: item.urlToImage\n    };\n    return React.createElement(React.Fragment, null, React.createElement(Image, {\n      style: styles.im,\n      resizeMode: \"cover\",\n      source: img,\n      key: uuid(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      key: uuid(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.desc,\n      key: uuid(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }\n    }, item.description, \"\\n\", \"\\n\"));\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }) : React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, rr));\n};\nvar styles = StyleSheet.create({\n  title: {\n    color: 'blue',\n    fontSize: 20\n  },\n  desc: {\n    fontSize: 16\n  },\n  im: {\n    width: 800,\n    height: 300\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Works/NewsApp/newApp/src/something/cards.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","loadnews","ScrollView","uuid","Cards","isLoading","setLoading","data","setData","Dimensions","get","width","height","wordSe","state","search","word","getMovies","fetch","response","json","articles","console","error","rr","map","item","img","uri","urlToImage","styles","im","title","desc","description","flex","padding","StyleSheet","create","color","fontSize","loading","position","left","right","top","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { View, Text, Button, Image ,FlatList, ActivityIndicator, StyleSheet,Dimensions, ImageBackground } from 'react-native';\r\n//import { Api } from '../Api/Api';\r\nimport { loadnews } from '../Reducer/SearchReducer';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n//import {Card} from './card'\r\n//import axios from 'axios';\r\nimport uuid from 'react-uuid'\r\n\r\nexport const Cards = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    const { width, height } = Dimensions.get('window');\r\n    let wordSe = useSelector((state)=>state.search.word);\r\n   \r\n    //console.log(c) \r\n    const getMovies = async () => {\r\n       try {\r\n\r\n        const response = await fetch(`https://newsapi.org/v2/everything?q=${wordSe}&apiKey=482d083900f44dbc992e9d0195a02dca`);\r\n        const json = await response.json();\r\n        setData(json.articles);\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getMovies();\r\n    }, []);\r\n  //console.log(data)\r\n  let rr = data.map((item)=>{\r\n    let img = {uri:item.urlToImage}\r\n   // let c = useSelector((state)=>state.search.word)\r\n   // console.log(c) \r\nreturn <>\r\n\r\n<Image style={styles.im} resizeMode=\"cover\"  source={img} key={uuid()}/>\r\n<Text style={styles.title} key={uuid()}>{item.title}</Text>\r\n<Text style={styles.desc} key={uuid()}>{item.description}{\"\\n\"}{\"\\n\"}</Text>\r\n\r\n</>\r\n        \r\n  })\r\n   \r\n\r\n  //totalResults\r\n    return (\r\n      \r\n      <View style={{ flex: 1, padding: 24 }}>\r\n     {isLoading ? <ActivityIndicator size='large' /> : (\r\n       <ScrollView>{rr}</ScrollView>\r\n     )}\r\n      </View>\r\n    );\r\n}//<Text>ЗАГРУЗКА......</Text>\r\nconst styles = StyleSheet.create({\r\ntitle:{\r\n  color: 'blue',\r\nfontSize:20\r\n},\r\ndesc:{\r\n  fontSize:16\r\n},\r\nim: {\r\n  width:800,\r\n  height:300\r\n},\r\nloading: {\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\n})\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}