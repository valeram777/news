{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\Works\\\\NewsApp\\\\newApp\\\\src\\\\something\\\\card.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport uuid from 'uuid';\nexport var Card = function Card(index) {\n  var ins = useSelector(function (state) {\n    return state.search.index;\n  });\n  var cc = useSelector(function (state) {\n    return state.search.cards[ins];\n  });\n  var img = {\n    uri: cc.urlToImage\n  };\n  return React.createElement(ScrollView, {\n    style: styles.boxContainer,\n    key: uuid(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(View, {\n    key: uuid(),\n    style: styles.post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    resizeMode: \"cover\",\n    source: img,\n    key: uuid(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    key: uuid(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, cc.author, \"  \"), React.createElement(TouchableOpacity, {\n    key: uuid(),\n    onPress: function onPress() {\n      return Linking.openURL(cc.url);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    key: uuid(),\n    style: styles.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, cc.url)), React.createElement(Text, {\n    key: uuid(),\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }, cc.description, \" \"), React.createElement(Text, {\n    key: uuid(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }, cc.publishedAt.slice(0, 10)))));\n};\nvar styles = StyleSheet.create({\n  boxContainer: {},\n  post: {\n    marginBottom: 25,\n    marginHorizontal: 10\n  },\n  image: {\n    width: '100%',\n    height: 200\n  },\n  textWrap: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    width: '100%'\n  },\n  description: {\n    marginTop: 20,\n    fontSize: 20\n  },\n  url: {\n    borderColor: 2\n  }\n});","map":{"version":3,"sources":["E:/Works/NewsApp/newApp/src/something/card.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","uuid","Card","index","ins","state","search","cc","cards","img","uri","urlToImage","styles","boxContainer","post","image","author","Linking","openURL","url","description","publishedAt","slice","StyleSheet","create","marginBottom","marginHorizontal","width","height","textWrap","backgroundColor","paddingVertical","paddingHorizontal","alignItems","marginTop","fontSize","borderColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { View, Text, Button, Image,StyleSheet,  ScrollView,Linking, TouchableOpacity   } from 'react-native';\r\nimport uuid from 'uuid'\r\nexport const Card = (index)=>{\r\n  \r\n  \r\nlet ins = useSelector((state)=>state.search.index)\r\nlet cc = useSelector((state)=>state.search.cards[ins])\r\n\r\nlet img = {uri:cc.urlToImage}\r\n\r\n\r\nreturn (\r\n    <ScrollView style={styles.boxContainer} key={uuid()} >\r\n     \r\n     <>\r\n      <View key={uuid()} style={styles.post} >\r\n      <Image style={styles.image} resizeMode=\"cover\"  source={img} key={uuid()}/>\r\n      <Text key={uuid()} >{cc.author}  </Text>\r\n      <TouchableOpacity key={uuid()} onPress={()=> Linking.openURL(cc.url)} >\r\n      <Text key={uuid()} style={styles.url}>{cc.url}</Text>\r\n       </TouchableOpacity>\r\n       <Text key={uuid()} style={styles.description}>{cc.description} </Text>\r\n       <Text key={uuid()} >{(cc.publishedAt).slice(0,10)}</Text>\r\n      </View>\r\n    </>\r\n    </ScrollView>\r\n    \r\n)\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\nboxContainer: {\r\n    //flex: 1,\r\n\r\n},\r\n\r\npost: {\r\n    marginBottom: 25,\r\n    marginHorizontal:10,\r\n  \r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: 200\r\n  },\r\n  textWrap: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    width: '100%'\r\n  },\r\n  description: {\r\n    marginTop:20,\r\n   fontSize:20\r\n  },\r\n  url:{\r\nborderColor:2\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}